version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15
    environment:
      POSTGRES_DB: movie_database
      POSTGRES_USER: movie_user
      POSTGRES_PASSWORD: movie_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U movie_user -d movie_database"]
      interval: 10s
      timeout: 5s
      retries: 5

  # NQL Movie Chatbot API
  nql-bot:
    build: .
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql://movie_user:movie_password@postgres:5432/movie_database
      - AI_PROVIDER=openai
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - USE_PRODUCTION_DB=true
      - SCHEMA_TYPE=default
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./logs:/app/logs
    restart: unless-stopped

  # Redis for caching (optional)
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped

  # Nginx reverse proxy (optional)
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/nginx/ssl
    depends_on:
      - nql-bot
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:
